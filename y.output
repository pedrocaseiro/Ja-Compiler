Terminals which are not used

   RESERVED


Grammar

    0 $accept: Program $end

    1 Program: CLASS IDAux OBRACE DeclarationAux CBRACE

    2 DeclarationAux: DeclarationAux DeclarationL
    3               | /* empty */

    4 DeclarationL: FieldDecl
    5             | MethodDecl
    6             | SEMI

    7 FieldDecl: PUBLIC STATIC Type FieldDeclL SEMI
    8          | error SEMI

    9 FieldDeclL: FieldDeclL COMMA FieldsIds
   10           | FieldsIds

   11 FieldsIds: IDAux

   12 MethodDecl: PUBLIC STATIC MethodHeader MethodBody

   13 MethodHeader: Type IDAux OCURV MethodParamsL CCURV
   14             | VOIDAux IDAux OCURV MethodParamsL CCURV

   15 MethodParamsL: MethodParams
   16              | FormalParamsStringArray
   17              | /* empty */

   18 VOIDAux: VOID

   19 MethodParams: MethodParams COMMA FormalParams
   20             | FormalParams

   21 FormalParamsStringArray: StringArray OSQUARE CSQUARE IDAux

   22 FormalParams: Type IDAux

   23 StringArray: STRING

   24 MethodBody: OBRACE VarDeclStatement CBRACE

   25 VarDeclStatement: VarDeclStatement VarDecl
   26                 | VarDeclStatement Statement
   27                 | /* empty */

   28 VarDecl: Type VarDeclL SEMI

   29 VarDeclL: VarDeclL COMMA VarsIds
   30         | VarsIds

   31 VarsIds: IDAux

   32 Statement: OBRACE StatementL CBRACE
   33          | IF OCURV Expr CCURV Statement ELSE Statement
   34          | IF OCURV Expr CCURV Statement
   35          | WHILE OCURV Expr CCURV Statement
   36          | DO Statement WHILE OCURV Expr CCURV SEMI
   37          | PRINT OCURV Expr CCURV SEMI
   38          | PRINT OCURV StrLitAux CCURV SEMI
   39          | Assignment SEMI
   40          | MethodInvocation SEMI
   41          | ParseArgs SEMI
   42          | SEMI
   43          | RETURN Expr SEMI
   44          | RETURN SEMI
   45          | error SEMI

   46 StatementL: StatementL Statement
   47           | /* empty */

   48 Assignment: IDAux ASSIGN Expr

   49 MethodInvocation: IDAux OCURV Expr CommaExpr CCURV
   50                 | IDAux OCURV CCURV
   51                 | IDAux OCURV error CCURV

   52 CommaExpr: CommaExpr COMMA Expr
   53          | /* empty */

   54 StrLitAux: STRLIT

   55 ParseArgs: PARSEINT OCURV IDAux OSQUARE Expr CSQUARE CCURV
   56          | PARSEINT OCURV error CCURV

   57 ExprAux: MethodInvocation
   58        | ParseArgs
   59        | ExprAux AND ExprAux
   60        | ExprAux OR ExprAux
   61        | ExprAux EQ ExprAux
   62        | ExprAux GEQ ExprAux
   63        | ExprAux GT ExprAux
   64        | ExprAux LEQ ExprAux
   65        | ExprAux LT ExprAux
   66        | ExprAux NEQ ExprAux
   67        | ExprAux PLUS ExprAux
   68        | ExprAux MINUS ExprAux
   69        | ExprAux STAR ExprAux
   70        | ExprAux DIV ExprAux
   71        | ExprAux MOD ExprAux
   72        | PLUS ExprAux
   73        | MINUS ExprAux
   74        | NOT ExprAux
   75        | IDAux
   76        | IDAux DOTLENGTH
   77        | OCURV Expr CCURV
   78        | BOOLLIT
   79        | DECLIT
   80        | REALLIT
   81        | OCURV error CCURV

   82 Expr: Assignment
   83     | ExprAux

   84 Type: BOOL
   85     | INT
   86     | DOUBLE

   87 IDAux: ID


Terminals, with rules where they appear

$end (0) 0
error (256) 8 45 51 56 81
BOOL (258) 84
BOOLLIT (259) 78
CLASS (260) 1
DO (261) 36
DOTLENGTH (262) 76
DOUBLE (263) 86
ELSE (264) 33
IF (265) 33 34
INT (266) 85
PARSEINT (267) 55 56
PRINT (268) 37 38
PUBLIC (269) 7 12
RETURN (270) 43 44
STATIC (271) 7 12
WHILE (272) 35 36
OCURV (273) 13 14 33 34 35 36 37 38 49 50 51 55 56 77 81
CCURV (274) 13 14 33 34 35 36 37 38 49 50 51 55 56 77 81
OBRACE (275) 1 24 32
CBRACE (276) 1 24 32
STRING (277) 23
VOID (278) 18
OSQUARE (279) 21 55
CSQUARE (280) 21 55
AND (281) 59
OR (282) 60
LT (283) 65
GT (284) 63
EQ (285) 61
NEQ (286) 66
LEQ (287) 64
GEQ (288) 62
PLUS (289) 67 72
MINUS (290) 68 73
STAR (291) 69
DIV (292) 70
MOD (293) 71
NOT (294) 74
ASSIGN (295) 48
SEMI (296) 6 7 8 28 36 37 38 39 40 41 42 43 44 45
COMMA (297) 9 19 29 52
RESERVED (298)
DECLIT (299) 79
REALLIT (300) 80
STRLIT (301) 54
ID (302) 87
IF_NO_ELSE (303)
UNARY (304)


Nonterminals, with rules where they appear

$accept (50)
    on left: 0
Program (51)
    on left: 1, on right: 0
DeclarationAux (52)
    on left: 2 3, on right: 1 2
DeclarationL (53)
    on left: 4 5 6, on right: 2
FieldDecl (54)
    on left: 7 8, on right: 4
FieldDeclL (55)
    on left: 9 10, on right: 7 9
FieldsIds (56)
    on left: 11, on right: 9 10
MethodDecl (57)
    on left: 12, on right: 5
MethodHeader (58)
    on left: 13 14, on right: 12
MethodParamsL (59)
    on left: 15 16 17, on right: 13 14
VOIDAux (60)
    on left: 18, on right: 14
MethodParams (61)
    on left: 19 20, on right: 15 19
FormalParamsStringArray (62)
    on left: 21, on right: 16
FormalParams (63)
    on left: 22, on right: 19 20
StringArray (64)
    on left: 23, on right: 21
MethodBody (65)
    on left: 24, on right: 12
VarDeclStatement (66)
    on left: 25 26 27, on right: 24 25 26
VarDecl (67)
    on left: 28, on right: 25
VarDeclL (68)
    on left: 29 30, on right: 28 29
VarsIds (69)
    on left: 31, on right: 29 30
Statement (70)
    on left: 32 33 34 35 36 37 38 39 40 41 42 43 44 45,
    on right: 26 33 34 35 36 46
StatementL (71)
    on left: 46 47, on right: 32 46
Assignment (72)
    on left: 48, on right: 39 82
MethodInvocation (73)
    on left: 49 50 51, on right: 40 57
CommaExpr (74)
    on left: 52 53, on right: 49 52
StrLitAux (75)
    on left: 54, on right: 38
ParseArgs (76)
    on left: 55 56, on right: 41 58
ExprAux (77)
    on left: 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74
    75 76 77 78 79 80 81, on right: 59 60 61 62 63 64 65 66 67 68 69
    70 71 72 73 74 83
Expr (78)
    on left: 82 83, on right: 33 34 35 36 37 43 48 49 52 55 77
Type (79)
    on left: 84 85 86, on right: 7 13 22 28
IDAux (80)
    on left: 87, on right: 1 11 13 14 21 22 31 48 49 50 51 55 75 76


state 0

    0 $accept: . Program $end

    CLASS  shift, and go to state 1

    Program  go to state 2


state 1

    1 Program: CLASS . IDAux OBRACE DeclarationAux CBRACE

    ID  shift, and go to state 3

    IDAux  go to state 4


state 2

    0 $accept: Program . $end

    $end  shift, and go to state 5


state 3

   87 IDAux: ID .

    $default  reduce using rule 87 (IDAux)


state 4

    1 Program: CLASS IDAux . OBRACE DeclarationAux CBRACE

    OBRACE  shift, and go to state 6


state 5

    0 $accept: Program $end .

    $default  accept


state 6

    1 Program: CLASS IDAux OBRACE . DeclarationAux CBRACE

    $default  reduce using rule 3 (DeclarationAux)

    DeclarationAux  go to state 7


state 7

    1 Program: CLASS IDAux OBRACE DeclarationAux . CBRACE
    2 DeclarationAux: DeclarationAux . DeclarationL

    error   shift, and go to state 8
    PUBLIC  shift, and go to state 9
    CBRACE  shift, and go to state 10
    SEMI    shift, and go to state 11

    DeclarationL  go to state 12
    FieldDecl     go to state 13
    MethodDecl    go to state 14


state 8

    8 FieldDecl: error . SEMI

    SEMI  shift, and go to state 15


state 9

    7 FieldDecl: PUBLIC . STATIC Type FieldDeclL SEMI
   12 MethodDecl: PUBLIC . STATIC MethodHeader MethodBody

    STATIC  shift, and go to state 16


state 10

    1 Program: CLASS IDAux OBRACE DeclarationAux CBRACE .

    $default  reduce using rule 1 (Program)


state 11

    6 DeclarationL: SEMI .

    $default  reduce using rule 6 (DeclarationL)


state 12

    2 DeclarationAux: DeclarationAux DeclarationL .

    $default  reduce using rule 2 (DeclarationAux)


state 13

    4 DeclarationL: FieldDecl .

    $default  reduce using rule 4 (DeclarationL)


state 14

    5 DeclarationL: MethodDecl .

    $default  reduce using rule 5 (DeclarationL)


state 15

    8 FieldDecl: error SEMI .

    $default  reduce using rule 8 (FieldDecl)


state 16

    7 FieldDecl: PUBLIC STATIC . Type FieldDeclL SEMI
   12 MethodDecl: PUBLIC STATIC . MethodHeader MethodBody

    BOOL    shift, and go to state 17
    DOUBLE  shift, and go to state 18
    INT     shift, and go to state 19
    VOID    shift, and go to state 20

    MethodHeader  go to state 21
    VOIDAux       go to state 22
    Type          go to state 23


state 17

   84 Type: BOOL .

    $default  reduce using rule 84 (Type)


state 18

   86 Type: DOUBLE .

    $default  reduce using rule 86 (Type)


state 19

   85 Type: INT .

    $default  reduce using rule 85 (Type)


state 20

   18 VOIDAux: VOID .

    $default  reduce using rule 18 (VOIDAux)


state 21

   12 MethodDecl: PUBLIC STATIC MethodHeader . MethodBody

    OBRACE  shift, and go to state 24

    MethodBody  go to state 25


state 22

   14 MethodHeader: VOIDAux . IDAux OCURV MethodParamsL CCURV

    ID  shift, and go to state 3

    IDAux  go to state 26


state 23

    7 FieldDecl: PUBLIC STATIC Type . FieldDeclL SEMI
   13 MethodHeader: Type . IDAux OCURV MethodParamsL CCURV

    ID  shift, and go to state 3

    FieldDeclL  go to state 27
    FieldsIds   go to state 28
    IDAux       go to state 29


state 24

   24 MethodBody: OBRACE . VarDeclStatement CBRACE

    $default  reduce using rule 27 (VarDeclStatement)

    VarDeclStatement  go to state 30


state 25

   12 MethodDecl: PUBLIC STATIC MethodHeader MethodBody .

    $default  reduce using rule 12 (MethodDecl)


state 26

   14 MethodHeader: VOIDAux IDAux . OCURV MethodParamsL CCURV

    OCURV  shift, and go to state 31


state 27

    7 FieldDecl: PUBLIC STATIC Type FieldDeclL . SEMI
    9 FieldDeclL: FieldDeclL . COMMA FieldsIds

    SEMI   shift, and go to state 32
    COMMA  shift, and go to state 33


state 28

   10 FieldDeclL: FieldsIds .

    $default  reduce using rule 10 (FieldDeclL)


state 29

   11 FieldsIds: IDAux .
   13 MethodHeader: Type IDAux . OCURV MethodParamsL CCURV

    OCURV  shift, and go to state 34

    $default  reduce using rule 11 (FieldsIds)


state 30

   24 MethodBody: OBRACE VarDeclStatement . CBRACE
   25 VarDeclStatement: VarDeclStatement . VarDecl
   26                 | VarDeclStatement . Statement

    error     shift, and go to state 35
    BOOL      shift, and go to state 17
    DO        shift, and go to state 36
    DOUBLE    shift, and go to state 18
    IF        shift, and go to state 37
    INT       shift, and go to state 19
    PARSEINT  shift, and go to state 38
    PRINT     shift, and go to state 39
    RETURN    shift, and go to state 40
    WHILE     shift, and go to state 41
    OBRACE    shift, and go to state 42
    CBRACE    shift, and go to state 43
    SEMI      shift, and go to state 44
    ID        shift, and go to state 3

    VarDecl           go to state 45
    Statement         go to state 46
    Assignment        go to state 47
    MethodInvocation  go to state 48
    ParseArgs         go to state 49
    Type              go to state 50
    IDAux             go to state 51


state 31

   14 MethodHeader: VOIDAux IDAux OCURV . MethodParamsL CCURV

    BOOL    shift, and go to state 17
    DOUBLE  shift, and go to state 18
    INT     shift, and go to state 19
    STRING  shift, and go to state 52

    $default  reduce using rule 17 (MethodParamsL)

    MethodParamsL            go to state 53
    MethodParams             go to state 54
    FormalParamsStringArray  go to state 55
    FormalParams             go to state 56
    StringArray              go to state 57
    Type                     go to state 58


state 32

    7 FieldDecl: PUBLIC STATIC Type FieldDeclL SEMI .

    $default  reduce using rule 7 (FieldDecl)


state 33

    9 FieldDeclL: FieldDeclL COMMA . FieldsIds

    ID  shift, and go to state 3

    FieldsIds  go to state 59
    IDAux      go to state 60


state 34

   13 MethodHeader: Type IDAux OCURV . MethodParamsL CCURV

    BOOL    shift, and go to state 17
    DOUBLE  shift, and go to state 18
    INT     shift, and go to state 19
    STRING  shift, and go to state 52

    $default  reduce using rule 17 (MethodParamsL)

    MethodParamsL            go to state 61
    MethodParams             go to state 54
    FormalParamsStringArray  go to state 55
    FormalParams             go to state 56
    StringArray              go to state 57
    Type                     go to state 58


state 35

   45 Statement: error . SEMI

    SEMI  shift, and go to state 62


state 36

   36 Statement: DO . Statement WHILE OCURV Expr CCURV SEMI

    error     shift, and go to state 35
    DO        shift, and go to state 36
    IF        shift, and go to state 37
    PARSEINT  shift, and go to state 38
    PRINT     shift, and go to state 39
    RETURN    shift, and go to state 40
    WHILE     shift, and go to state 41
    OBRACE    shift, and go to state 42
    SEMI      shift, and go to state 44
    ID        shift, and go to state 3

    Statement         go to state 63
    Assignment        go to state 47
    MethodInvocation  go to state 48
    ParseArgs         go to state 49
    IDAux             go to state 51


state 37

   33 Statement: IF . OCURV Expr CCURV Statement ELSE Statement
   34          | IF . OCURV Expr CCURV Statement

    OCURV  shift, and go to state 64


state 38

   55 ParseArgs: PARSEINT . OCURV IDAux OSQUARE Expr CSQUARE CCURV
   56          | PARSEINT . OCURV error CCURV

    OCURV  shift, and go to state 65


state 39

   37 Statement: PRINT . OCURV Expr CCURV SEMI
   38          | PRINT . OCURV StrLitAux CCURV SEMI

    OCURV  shift, and go to state 66


state 40

   43 Statement: RETURN . Expr SEMI
   44          | RETURN . SEMI

    BOOLLIT   shift, and go to state 67
    PARSEINT  shift, and go to state 38
    OCURV     shift, and go to state 68
    PLUS      shift, and go to state 69
    MINUS     shift, and go to state 70
    NOT       shift, and go to state 71
    SEMI      shift, and go to state 72
    DECLIT    shift, and go to state 73
    REALLIT   shift, and go to state 74
    ID        shift, and go to state 3

    Assignment        go to state 75
    MethodInvocation  go to state 76
    ParseArgs         go to state 77
    ExprAux           go to state 78
    Expr              go to state 79
    IDAux             go to state 80


state 41

   35 Statement: WHILE . OCURV Expr CCURV Statement

    OCURV  shift, and go to state 81


state 42

   32 Statement: OBRACE . StatementL CBRACE

    $default  reduce using rule 47 (StatementL)

    StatementL  go to state 82


state 43

   24 MethodBody: OBRACE VarDeclStatement CBRACE .

    $default  reduce using rule 24 (MethodBody)


state 44

   42 Statement: SEMI .

    $default  reduce using rule 42 (Statement)


state 45

   25 VarDeclStatement: VarDeclStatement VarDecl .

    $default  reduce using rule 25 (VarDeclStatement)


state 46

   26 VarDeclStatement: VarDeclStatement Statement .

    $default  reduce using rule 26 (VarDeclStatement)


state 47

   39 Statement: Assignment . SEMI

    SEMI  shift, and go to state 83


state 48

   40 Statement: MethodInvocation . SEMI

    SEMI  shift, and go to state 84


state 49

   41 Statement: ParseArgs . SEMI

    SEMI  shift, and go to state 85


state 50

   28 VarDecl: Type . VarDeclL SEMI

    ID  shift, and go to state 3

    VarDeclL  go to state 86
    VarsIds   go to state 87
    IDAux     go to state 88


state 51

   48 Assignment: IDAux . ASSIGN Expr
   49 MethodInvocation: IDAux . OCURV Expr CommaExpr CCURV
   50                 | IDAux . OCURV CCURV
   51                 | IDAux . OCURV error CCURV

    OCURV   shift, and go to state 89
    ASSIGN  shift, and go to state 90


state 52

   23 StringArray: STRING .

    $default  reduce using rule 23 (StringArray)


state 53

   14 MethodHeader: VOIDAux IDAux OCURV MethodParamsL . CCURV

    CCURV  shift, and go to state 91


state 54

   15 MethodParamsL: MethodParams .
   19 MethodParams: MethodParams . COMMA FormalParams

    COMMA  shift, and go to state 92

    $default  reduce using rule 15 (MethodParamsL)


state 55

   16 MethodParamsL: FormalParamsStringArray .

    $default  reduce using rule 16 (MethodParamsL)


state 56

   20 MethodParams: FormalParams .

    $default  reduce using rule 20 (MethodParams)


state 57

   21 FormalParamsStringArray: StringArray . OSQUARE CSQUARE IDAux

    OSQUARE  shift, and go to state 93


state 58

   22 FormalParams: Type . IDAux

    ID  shift, and go to state 3

    IDAux  go to state 94


state 59

    9 FieldDeclL: FieldDeclL COMMA FieldsIds .

    $default  reduce using rule 9 (FieldDeclL)


state 60

   11 FieldsIds: IDAux .

    $default  reduce using rule 11 (FieldsIds)


state 61

   13 MethodHeader: Type IDAux OCURV MethodParamsL . CCURV

    CCURV  shift, and go to state 95


state 62

   45 Statement: error SEMI .

    $default  reduce using rule 45 (Statement)


state 63

   36 Statement: DO Statement . WHILE OCURV Expr CCURV SEMI

    WHILE  shift, and go to state 96


state 64

   33 Statement: IF OCURV . Expr CCURV Statement ELSE Statement
   34          | IF OCURV . Expr CCURV Statement

    BOOLLIT   shift, and go to state 67
    PARSEINT  shift, and go to state 38
    OCURV     shift, and go to state 68
    PLUS      shift, and go to state 69
    MINUS     shift, and go to state 70
    NOT       shift, and go to state 71
    DECLIT    shift, and go to state 73
    REALLIT   shift, and go to state 74
    ID        shift, and go to state 3

    Assignment        go to state 75
    MethodInvocation  go to state 76
    ParseArgs         go to state 77
    ExprAux           go to state 78
    Expr              go to state 97
    IDAux             go to state 80


state 65

   55 ParseArgs: PARSEINT OCURV . IDAux OSQUARE Expr CSQUARE CCURV
   56          | PARSEINT OCURV . error CCURV

    error  shift, and go to state 98
    ID     shift, and go to state 3

    IDAux  go to state 99


state 66

   37 Statement: PRINT OCURV . Expr CCURV SEMI
   38          | PRINT OCURV . StrLitAux CCURV SEMI

    BOOLLIT   shift, and go to state 67
    PARSEINT  shift, and go to state 38
    OCURV     shift, and go to state 68
    PLUS      shift, and go to state 69
    MINUS     shift, and go to state 70
    NOT       shift, and go to state 71
    DECLIT    shift, and go to state 73
    REALLIT   shift, and go to state 74
    STRLIT    shift, and go to state 100
    ID        shift, and go to state 3

    Assignment        go to state 75
    MethodInvocation  go to state 76
    StrLitAux         go to state 101
    ParseArgs         go to state 77
    ExprAux           go to state 78
    Expr              go to state 102
    IDAux             go to state 80


state 67

   78 ExprAux: BOOLLIT .

    $default  reduce using rule 78 (ExprAux)


state 68

   77 ExprAux: OCURV . Expr CCURV
   81        | OCURV . error CCURV

    error     shift, and go to state 103
    BOOLLIT   shift, and go to state 67
    PARSEINT  shift, and go to state 38
    OCURV     shift, and go to state 68
    PLUS      shift, and go to state 69
    MINUS     shift, and go to state 70
    NOT       shift, and go to state 71
    DECLIT    shift, and go to state 73
    REALLIT   shift, and go to state 74
    ID        shift, and go to state 3

    Assignment        go to state 75
    MethodInvocation  go to state 76
    ParseArgs         go to state 77
    ExprAux           go to state 78
    Expr              go to state 104
    IDAux             go to state 80


state 69

   72 ExprAux: PLUS . ExprAux

    BOOLLIT   shift, and go to state 67
    PARSEINT  shift, and go to state 38
    OCURV     shift, and go to state 68
    PLUS      shift, and go to state 69
    MINUS     shift, and go to state 70
    NOT       shift, and go to state 71
    DECLIT    shift, and go to state 73
    REALLIT   shift, and go to state 74
    ID        shift, and go to state 3

    MethodInvocation  go to state 76
    ParseArgs         go to state 77
    ExprAux           go to state 105
    IDAux             go to state 106


state 70

   73 ExprAux: MINUS . ExprAux

    BOOLLIT   shift, and go to state 67
    PARSEINT  shift, and go to state 38
    OCURV     shift, and go to state 68
    PLUS      shift, and go to state 69
    MINUS     shift, and go to state 70
    NOT       shift, and go to state 71
    DECLIT    shift, and go to state 73
    REALLIT   shift, and go to state 74
    ID        shift, and go to state 3

    MethodInvocation  go to state 76
    ParseArgs         go to state 77
    ExprAux           go to state 107
    IDAux             go to state 106


state 71

   74 ExprAux: NOT . ExprAux

    BOOLLIT   shift, and go to state 67
    PARSEINT  shift, and go to state 38
    OCURV     shift, and go to state 68
    PLUS      shift, and go to state 69
    MINUS     shift, and go to state 70
    NOT       shift, and go to state 71
    DECLIT    shift, and go to state 73
    REALLIT   shift, and go to state 74
    ID        shift, and go to state 3

    MethodInvocation  go to state 76
    ParseArgs         go to state 77
    ExprAux           go to state 108
    IDAux             go to state 106


state 72

   44 Statement: RETURN SEMI .

    $default  reduce using rule 44 (Statement)


state 73

   79 ExprAux: DECLIT .

    $default  reduce using rule 79 (ExprAux)


state 74

   80 ExprAux: REALLIT .

    $default  reduce using rule 80 (ExprAux)


state 75

   82 Expr: Assignment .

    $default  reduce using rule 82 (Expr)


state 76

   57 ExprAux: MethodInvocation .

    $default  reduce using rule 57 (ExprAux)


state 77

   58 ExprAux: ParseArgs .

    $default  reduce using rule 58 (ExprAux)


state 78

   59 ExprAux: ExprAux . AND ExprAux
   60        | ExprAux . OR ExprAux
   61        | ExprAux . EQ ExprAux
   62        | ExprAux . GEQ ExprAux
   63        | ExprAux . GT ExprAux
   64        | ExprAux . LEQ ExprAux
   65        | ExprAux . LT ExprAux
   66        | ExprAux . NEQ ExprAux
   67        | ExprAux . PLUS ExprAux
   68        | ExprAux . MINUS ExprAux
   69        | ExprAux . STAR ExprAux
   70        | ExprAux . DIV ExprAux
   71        | ExprAux . MOD ExprAux
   83 Expr: ExprAux .

    AND    shift, and go to state 109
    OR     shift, and go to state 110
    LT     shift, and go to state 111
    GT     shift, and go to state 112
    EQ     shift, and go to state 113
    NEQ    shift, and go to state 114
    LEQ    shift, and go to state 115
    GEQ    shift, and go to state 116
    PLUS   shift, and go to state 117
    MINUS  shift, and go to state 118
    STAR   shift, and go to state 119
    DIV    shift, and go to state 120
    MOD    shift, and go to state 121

    $default  reduce using rule 83 (Expr)


state 79

   43 Statement: RETURN Expr . SEMI

    SEMI  shift, and go to state 122


state 80

   48 Assignment: IDAux . ASSIGN Expr
   49 MethodInvocation: IDAux . OCURV Expr CommaExpr CCURV
   50                 | IDAux . OCURV CCURV
   51                 | IDAux . OCURV error CCURV
   75 ExprAux: IDAux .
   76        | IDAux . DOTLENGTH

    DOTLENGTH  shift, and go to state 123
    OCURV      shift, and go to state 89
    ASSIGN     shift, and go to state 90

    $default  reduce using rule 75 (ExprAux)


state 81

   35 Statement: WHILE OCURV . Expr CCURV Statement

    BOOLLIT   shift, and go to state 67
    PARSEINT  shift, and go to state 38
    OCURV     shift, and go to state 68
    PLUS      shift, and go to state 69
    MINUS     shift, and go to state 70
    NOT       shift, and go to state 71
    DECLIT    shift, and go to state 73
    REALLIT   shift, and go to state 74
    ID        shift, and go to state 3

    Assignment        go to state 75
    MethodInvocation  go to state 76
    ParseArgs         go to state 77
    ExprAux           go to state 78
    Expr              go to state 124
    IDAux             go to state 80


state 82

   32 Statement: OBRACE StatementL . CBRACE
   46 StatementL: StatementL . Statement

    error     shift, and go to state 35
    DO        shift, and go to state 36
    IF        shift, and go to state 37
    PARSEINT  shift, and go to state 38
    PRINT     shift, and go to state 39
    RETURN    shift, and go to state 40
    WHILE     shift, and go to state 41
    OBRACE    shift, and go to state 42
    CBRACE    shift, and go to state 125
    SEMI      shift, and go to state 44
    ID        shift, and go to state 3

    Statement         go to state 126
    Assignment        go to state 47
    MethodInvocation  go to state 48
    ParseArgs         go to state 49
    IDAux             go to state 51


state 83

   39 Statement: Assignment SEMI .

    $default  reduce using rule 39 (Statement)


state 84

   40 Statement: MethodInvocation SEMI .

    $default  reduce using rule 40 (Statement)


state 85

   41 Statement: ParseArgs SEMI .

    $default  reduce using rule 41 (Statement)


state 86

   28 VarDecl: Type VarDeclL . SEMI
   29 VarDeclL: VarDeclL . COMMA VarsIds

    SEMI   shift, and go to state 127
    COMMA  shift, and go to state 128


state 87

   30 VarDeclL: VarsIds .

    $default  reduce using rule 30 (VarDeclL)


state 88

   31 VarsIds: IDAux .

    $default  reduce using rule 31 (VarsIds)


state 89

   49 MethodInvocation: IDAux OCURV . Expr CommaExpr CCURV
   50                 | IDAux OCURV . CCURV
   51                 | IDAux OCURV . error CCURV

    error     shift, and go to state 129
    BOOLLIT   shift, and go to state 67
    PARSEINT  shift, and go to state 38
    OCURV     shift, and go to state 68
    CCURV     shift, and go to state 130
    PLUS      shift, and go to state 69
    MINUS     shift, and go to state 70
    NOT       shift, and go to state 71
    DECLIT    shift, and go to state 73
    REALLIT   shift, and go to state 74
    ID        shift, and go to state 3

    Assignment        go to state 75
    MethodInvocation  go to state 76
    ParseArgs         go to state 77
    ExprAux           go to state 78
    Expr              go to state 131
    IDAux             go to state 80


state 90

   48 Assignment: IDAux ASSIGN . Expr

    BOOLLIT   shift, and go to state 67
    PARSEINT  shift, and go to state 38
    OCURV     shift, and go to state 68
    PLUS      shift, and go to state 69
    MINUS     shift, and go to state 70
    NOT       shift, and go to state 71
    DECLIT    shift, and go to state 73
    REALLIT   shift, and go to state 74
    ID        shift, and go to state 3

    Assignment        go to state 75
    MethodInvocation  go to state 76
    ParseArgs         go to state 77
    ExprAux           go to state 78
    Expr              go to state 132
    IDAux             go to state 80


state 91

   14 MethodHeader: VOIDAux IDAux OCURV MethodParamsL CCURV .

    $default  reduce using rule 14 (MethodHeader)


state 92

   19 MethodParams: MethodParams COMMA . FormalParams

    BOOL    shift, and go to state 17
    DOUBLE  shift, and go to state 18
    INT     shift, and go to state 19

    FormalParams  go to state 133
    Type          go to state 58


state 93

   21 FormalParamsStringArray: StringArray OSQUARE . CSQUARE IDAux

    CSQUARE  shift, and go to state 134


state 94

   22 FormalParams: Type IDAux .

    $default  reduce using rule 22 (FormalParams)


state 95

   13 MethodHeader: Type IDAux OCURV MethodParamsL CCURV .

    $default  reduce using rule 13 (MethodHeader)


state 96

   36 Statement: DO Statement WHILE . OCURV Expr CCURV SEMI

    OCURV  shift, and go to state 135


state 97

   33 Statement: IF OCURV Expr . CCURV Statement ELSE Statement
   34          | IF OCURV Expr . CCURV Statement

    CCURV  shift, and go to state 136


state 98

   56 ParseArgs: PARSEINT OCURV error . CCURV

    CCURV  shift, and go to state 137


state 99

   55 ParseArgs: PARSEINT OCURV IDAux . OSQUARE Expr CSQUARE CCURV

    OSQUARE  shift, and go to state 138


state 100

   54 StrLitAux: STRLIT .

    $default  reduce using rule 54 (StrLitAux)


state 101

   38 Statement: PRINT OCURV StrLitAux . CCURV SEMI

    CCURV  shift, and go to state 139


state 102

   37 Statement: PRINT OCURV Expr . CCURV SEMI

    CCURV  shift, and go to state 140


state 103

   81 ExprAux: OCURV error . CCURV

    CCURV  shift, and go to state 141


state 104

   77 ExprAux: OCURV Expr . CCURV

    CCURV  shift, and go to state 142


state 105

   59 ExprAux: ExprAux . AND ExprAux
   60        | ExprAux . OR ExprAux
   61        | ExprAux . EQ ExprAux
   62        | ExprAux . GEQ ExprAux
   63        | ExprAux . GT ExprAux
   64        | ExprAux . LEQ ExprAux
   65        | ExprAux . LT ExprAux
   66        | ExprAux . NEQ ExprAux
   67        | ExprAux . PLUS ExprAux
   68        | ExprAux . MINUS ExprAux
   69        | ExprAux . STAR ExprAux
   70        | ExprAux . DIV ExprAux
   71        | ExprAux . MOD ExprAux
   72        | PLUS ExprAux .

    $default  reduce using rule 72 (ExprAux)


state 106

   49 MethodInvocation: IDAux . OCURV Expr CommaExpr CCURV
   50                 | IDAux . OCURV CCURV
   51                 | IDAux . OCURV error CCURV
   75 ExprAux: IDAux .
   76        | IDAux . DOTLENGTH

    DOTLENGTH  shift, and go to state 123
    OCURV      shift, and go to state 89

    $default  reduce using rule 75 (ExprAux)


state 107

   59 ExprAux: ExprAux . AND ExprAux
   60        | ExprAux . OR ExprAux
   61        | ExprAux . EQ ExprAux
   62        | ExprAux . GEQ ExprAux
   63        | ExprAux . GT ExprAux
   64        | ExprAux . LEQ ExprAux
   65        | ExprAux . LT ExprAux
   66        | ExprAux . NEQ ExprAux
   67        | ExprAux . PLUS ExprAux
   68        | ExprAux . MINUS ExprAux
   69        | ExprAux . STAR ExprAux
   70        | ExprAux . DIV ExprAux
   71        | ExprAux . MOD ExprAux
   73        | MINUS ExprAux .

    $default  reduce using rule 73 (ExprAux)


state 108

   59 ExprAux: ExprAux . AND ExprAux
   60        | ExprAux . OR ExprAux
   61        | ExprAux . EQ ExprAux
   62        | ExprAux . GEQ ExprAux
   63        | ExprAux . GT ExprAux
   64        | ExprAux . LEQ ExprAux
   65        | ExprAux . LT ExprAux
   66        | ExprAux . NEQ ExprAux
   67        | ExprAux . PLUS ExprAux
   68        | ExprAux . MINUS ExprAux
   69        | ExprAux . STAR ExprAux
   70        | ExprAux . DIV ExprAux
   71        | ExprAux . MOD ExprAux
   74        | NOT ExprAux .

    $default  reduce using rule 74 (ExprAux)


state 109

   59 ExprAux: ExprAux AND . ExprAux

    BOOLLIT   shift, and go to state 67
    PARSEINT  shift, and go to state 38
    OCURV     shift, and go to state 68
    PLUS      shift, and go to state 69
    MINUS     shift, and go to state 70
    NOT       shift, and go to state 71
    DECLIT    shift, and go to state 73
    REALLIT   shift, and go to state 74
    ID        shift, and go to state 3

    MethodInvocation  go to state 76
    ParseArgs         go to state 77
    ExprAux           go to state 143
    IDAux             go to state 106


state 110

   60 ExprAux: ExprAux OR . ExprAux

    BOOLLIT   shift, and go to state 67
    PARSEINT  shift, and go to state 38
    OCURV     shift, and go to state 68
    PLUS      shift, and go to state 69
    MINUS     shift, and go to state 70
    NOT       shift, and go to state 71
    DECLIT    shift, and go to state 73
    REALLIT   shift, and go to state 74
    ID        shift, and go to state 3

    MethodInvocation  go to state 76
    ParseArgs         go to state 77
    ExprAux           go to state 144
    IDAux             go to state 106


state 111

   65 ExprAux: ExprAux LT . ExprAux

    BOOLLIT   shift, and go to state 67
    PARSEINT  shift, and go to state 38
    OCURV     shift, and go to state 68
    PLUS      shift, and go to state 69
    MINUS     shift, and go to state 70
    NOT       shift, and go to state 71
    DECLIT    shift, and go to state 73
    REALLIT   shift, and go to state 74
    ID        shift, and go to state 3

    MethodInvocation  go to state 76
    ParseArgs         go to state 77
    ExprAux           go to state 145
    IDAux             go to state 106


state 112

   63 ExprAux: ExprAux GT . ExprAux

    BOOLLIT   shift, and go to state 67
    PARSEINT  shift, and go to state 38
    OCURV     shift, and go to state 68
    PLUS      shift, and go to state 69
    MINUS     shift, and go to state 70
    NOT       shift, and go to state 71
    DECLIT    shift, and go to state 73
    REALLIT   shift, and go to state 74
    ID        shift, and go to state 3

    MethodInvocation  go to state 76
    ParseArgs         go to state 77
    ExprAux           go to state 146
    IDAux             go to state 106


state 113

   61 ExprAux: ExprAux EQ . ExprAux

    BOOLLIT   shift, and go to state 67
    PARSEINT  shift, and go to state 38
    OCURV     shift, and go to state 68
    PLUS      shift, and go to state 69
    MINUS     shift, and go to state 70
    NOT       shift, and go to state 71
    DECLIT    shift, and go to state 73
    REALLIT   shift, and go to state 74
    ID        shift, and go to state 3

    MethodInvocation  go to state 76
    ParseArgs         go to state 77
    ExprAux           go to state 147
    IDAux             go to state 106


state 114

   66 ExprAux: ExprAux NEQ . ExprAux

    BOOLLIT   shift, and go to state 67
    PARSEINT  shift, and go to state 38
    OCURV     shift, and go to state 68
    PLUS      shift, and go to state 69
    MINUS     shift, and go to state 70
    NOT       shift, and go to state 71
    DECLIT    shift, and go to state 73
    REALLIT   shift, and go to state 74
    ID        shift, and go to state 3

    MethodInvocation  go to state 76
    ParseArgs         go to state 77
    ExprAux           go to state 148
    IDAux             go to state 106


state 115

   64 ExprAux: ExprAux LEQ . ExprAux

    BOOLLIT   shift, and go to state 67
    PARSEINT  shift, and go to state 38
    OCURV     shift, and go to state 68
    PLUS      shift, and go to state 69
    MINUS     shift, and go to state 70
    NOT       shift, and go to state 71
    DECLIT    shift, and go to state 73
    REALLIT   shift, and go to state 74
    ID        shift, and go to state 3

    MethodInvocation  go to state 76
    ParseArgs         go to state 77
    ExprAux           go to state 149
    IDAux             go to state 106


state 116

   62 ExprAux: ExprAux GEQ . ExprAux

    BOOLLIT   shift, and go to state 67
    PARSEINT  shift, and go to state 38
    OCURV     shift, and go to state 68
    PLUS      shift, and go to state 69
    MINUS     shift, and go to state 70
    NOT       shift, and go to state 71
    DECLIT    shift, and go to state 73
    REALLIT   shift, and go to state 74
    ID        shift, and go to state 3

    MethodInvocation  go to state 76
    ParseArgs         go to state 77
    ExprAux           go to state 150
    IDAux             go to state 106


state 117

   67 ExprAux: ExprAux PLUS . ExprAux

    BOOLLIT   shift, and go to state 67
    PARSEINT  shift, and go to state 38
    OCURV     shift, and go to state 68
    PLUS      shift, and go to state 69
    MINUS     shift, and go to state 70
    NOT       shift, and go to state 71
    DECLIT    shift, and go to state 73
    REALLIT   shift, and go to state 74
    ID        shift, and go to state 3

    MethodInvocation  go to state 76
    ParseArgs         go to state 77
    ExprAux           go to state 151
    IDAux             go to state 106


state 118

   68 ExprAux: ExprAux MINUS . ExprAux

    BOOLLIT   shift, and go to state 67
    PARSEINT  shift, and go to state 38
    OCURV     shift, and go to state 68
    PLUS      shift, and go to state 69
    MINUS     shift, and go to state 70
    NOT       shift, and go to state 71
    DECLIT    shift, and go to state 73
    REALLIT   shift, and go to state 74
    ID        shift, and go to state 3

    MethodInvocation  go to state 76
    ParseArgs         go to state 77
    ExprAux           go to state 152
    IDAux             go to state 106


state 119

   69 ExprAux: ExprAux STAR . ExprAux

    BOOLLIT   shift, and go to state 67
    PARSEINT  shift, and go to state 38
    OCURV     shift, and go to state 68
    PLUS      shift, and go to state 69
    MINUS     shift, and go to state 70
    NOT       shift, and go to state 71
    DECLIT    shift, and go to state 73
    REALLIT   shift, and go to state 74
    ID        shift, and go to state 3

    MethodInvocation  go to state 76
    ParseArgs         go to state 77
    ExprAux           go to state 153
    IDAux             go to state 106


state 120

   70 ExprAux: ExprAux DIV . ExprAux

    BOOLLIT   shift, and go to state 67
    PARSEINT  shift, and go to state 38
    OCURV     shift, and go to state 68
    PLUS      shift, and go to state 69
    MINUS     shift, and go to state 70
    NOT       shift, and go to state 71
    DECLIT    shift, and go to state 73
    REALLIT   shift, and go to state 74
    ID        shift, and go to state 3

    MethodInvocation  go to state 76
    ParseArgs         go to state 77
    ExprAux           go to state 154
    IDAux             go to state 106


state 121

   71 ExprAux: ExprAux MOD . ExprAux

    BOOLLIT   shift, and go to state 67
    PARSEINT  shift, and go to state 38
    OCURV     shift, and go to state 68
    PLUS      shift, and go to state 69
    MINUS     shift, and go to state 70
    NOT       shift, and go to state 71
    DECLIT    shift, and go to state 73
    REALLIT   shift, and go to state 74
    ID        shift, and go to state 3

    MethodInvocation  go to state 76
    ParseArgs         go to state 77
    ExprAux           go to state 155
    IDAux             go to state 106


state 122

   43 Statement: RETURN Expr SEMI .

    $default  reduce using rule 43 (Statement)


state 123

   76 ExprAux: IDAux DOTLENGTH .

    $default  reduce using rule 76 (ExprAux)


state 124

   35 Statement: WHILE OCURV Expr . CCURV Statement

    CCURV  shift, and go to state 156


state 125

   32 Statement: OBRACE StatementL CBRACE .

    $default  reduce using rule 32 (Statement)


state 126

   46 StatementL: StatementL Statement .

    $default  reduce using rule 46 (StatementL)


state 127

   28 VarDecl: Type VarDeclL SEMI .

    $default  reduce using rule 28 (VarDecl)


state 128

   29 VarDeclL: VarDeclL COMMA . VarsIds

    ID  shift, and go to state 3

    VarsIds  go to state 157
    IDAux    go to state 88


state 129

   51 MethodInvocation: IDAux OCURV error . CCURV

    CCURV  shift, and go to state 158


state 130

   50 MethodInvocation: IDAux OCURV CCURV .

    $default  reduce using rule 50 (MethodInvocation)


state 131

   49 MethodInvocation: IDAux OCURV Expr . CommaExpr CCURV

    $default  reduce using rule 53 (CommaExpr)

    CommaExpr  go to state 159


state 132

   48 Assignment: IDAux ASSIGN Expr .

    $default  reduce using rule 48 (Assignment)


state 133

   19 MethodParams: MethodParams COMMA FormalParams .

    $default  reduce using rule 19 (MethodParams)


state 134

   21 FormalParamsStringArray: StringArray OSQUARE CSQUARE . IDAux

    ID  shift, and go to state 3

    IDAux  go to state 160


state 135

   36 Statement: DO Statement WHILE OCURV . Expr CCURV SEMI

    BOOLLIT   shift, and go to state 67
    PARSEINT  shift, and go to state 38
    OCURV     shift, and go to state 68
    PLUS      shift, and go to state 69
    MINUS     shift, and go to state 70
    NOT       shift, and go to state 71
    DECLIT    shift, and go to state 73
    REALLIT   shift, and go to state 74
    ID        shift, and go to state 3

    Assignment        go to state 75
    MethodInvocation  go to state 76
    ParseArgs         go to state 77
    ExprAux           go to state 78
    Expr              go to state 161
    IDAux             go to state 80


state 136

   33 Statement: IF OCURV Expr CCURV . Statement ELSE Statement
   34          | IF OCURV Expr CCURV . Statement

    error     shift, and go to state 35
    DO        shift, and go to state 36
    IF        shift, and go to state 37
    PARSEINT  shift, and go to state 38
    PRINT     shift, and go to state 39
    RETURN    shift, and go to state 40
    WHILE     shift, and go to state 41
    OBRACE    shift, and go to state 42
    SEMI      shift, and go to state 44
    ID        shift, and go to state 3

    Statement         go to state 162
    Assignment        go to state 47
    MethodInvocation  go to state 48
    ParseArgs         go to state 49
    IDAux             go to state 51


state 137

   56 ParseArgs: PARSEINT OCURV error CCURV .

    $default  reduce using rule 56 (ParseArgs)


state 138

   55 ParseArgs: PARSEINT OCURV IDAux OSQUARE . Expr CSQUARE CCURV

    BOOLLIT   shift, and go to state 67
    PARSEINT  shift, and go to state 38
    OCURV     shift, and go to state 68
    PLUS      shift, and go to state 69
    MINUS     shift, and go to state 70
    NOT       shift, and go to state 71
    DECLIT    shift, and go to state 73
    REALLIT   shift, and go to state 74
    ID        shift, and go to state 3

    Assignment        go to state 75
    MethodInvocation  go to state 76
    ParseArgs         go to state 77
    ExprAux           go to state 78
    Expr              go to state 163
    IDAux             go to state 80


state 139

   38 Statement: PRINT OCURV StrLitAux CCURV . SEMI

    SEMI  shift, and go to state 164


state 140

   37 Statement: PRINT OCURV Expr CCURV . SEMI

    SEMI  shift, and go to state 165


state 141

   81 ExprAux: OCURV error CCURV .

    $default  reduce using rule 81 (ExprAux)


state 142

   77 ExprAux: OCURV Expr CCURV .

    $default  reduce using rule 77 (ExprAux)


state 143

   59 ExprAux: ExprAux . AND ExprAux
   59        | ExprAux AND ExprAux .
   60        | ExprAux . OR ExprAux
   61        | ExprAux . EQ ExprAux
   62        | ExprAux . GEQ ExprAux
   63        | ExprAux . GT ExprAux
   64        | ExprAux . LEQ ExprAux
   65        | ExprAux . LT ExprAux
   66        | ExprAux . NEQ ExprAux
   67        | ExprAux . PLUS ExprAux
   68        | ExprAux . MINUS ExprAux
   69        | ExprAux . STAR ExprAux
   70        | ExprAux . DIV ExprAux
   71        | ExprAux . MOD ExprAux

    LT     shift, and go to state 111
    GT     shift, and go to state 112
    EQ     shift, and go to state 113
    NEQ    shift, and go to state 114
    LEQ    shift, and go to state 115
    GEQ    shift, and go to state 116
    PLUS   shift, and go to state 117
    MINUS  shift, and go to state 118
    STAR   shift, and go to state 119
    DIV    shift, and go to state 120
    MOD    shift, and go to state 121

    $default  reduce using rule 59 (ExprAux)


state 144

   59 ExprAux: ExprAux . AND ExprAux
   60        | ExprAux . OR ExprAux
   60        | ExprAux OR ExprAux .
   61        | ExprAux . EQ ExprAux
   62        | ExprAux . GEQ ExprAux
   63        | ExprAux . GT ExprAux
   64        | ExprAux . LEQ ExprAux
   65        | ExprAux . LT ExprAux
   66        | ExprAux . NEQ ExprAux
   67        | ExprAux . PLUS ExprAux
   68        | ExprAux . MINUS ExprAux
   69        | ExprAux . STAR ExprAux
   70        | ExprAux . DIV ExprAux
   71        | ExprAux . MOD ExprAux

    AND    shift, and go to state 109
    LT     shift, and go to state 111
    GT     shift, and go to state 112
    EQ     shift, and go to state 113
    NEQ    shift, and go to state 114
    LEQ    shift, and go to state 115
    GEQ    shift, and go to state 116
    PLUS   shift, and go to state 117
    MINUS  shift, and go to state 118
    STAR   shift, and go to state 119
    DIV    shift, and go to state 120
    MOD    shift, and go to state 121

    $default  reduce using rule 60 (ExprAux)


state 145

   59 ExprAux: ExprAux . AND ExprAux
   60        | ExprAux . OR ExprAux
   61        | ExprAux . EQ ExprAux
   62        | ExprAux . GEQ ExprAux
   63        | ExprAux . GT ExprAux
   64        | ExprAux . LEQ ExprAux
   65        | ExprAux . LT ExprAux
   65        | ExprAux LT ExprAux .
   66        | ExprAux . NEQ ExprAux
   67        | ExprAux . PLUS ExprAux
   68        | ExprAux . MINUS ExprAux
   69        | ExprAux . STAR ExprAux
   70        | ExprAux . DIV ExprAux
   71        | ExprAux . MOD ExprAux

    PLUS   shift, and go to state 117
    MINUS  shift, and go to state 118
    STAR   shift, and go to state 119
    DIV    shift, and go to state 120
    MOD    shift, and go to state 121

    $default  reduce using rule 65 (ExprAux)


state 146

   59 ExprAux: ExprAux . AND ExprAux
   60        | ExprAux . OR ExprAux
   61        | ExprAux . EQ ExprAux
   62        | ExprAux . GEQ ExprAux
   63        | ExprAux . GT ExprAux
   63        | ExprAux GT ExprAux .
   64        | ExprAux . LEQ ExprAux
   65        | ExprAux . LT ExprAux
   66        | ExprAux . NEQ ExprAux
   67        | ExprAux . PLUS ExprAux
   68        | ExprAux . MINUS ExprAux
   69        | ExprAux . STAR ExprAux
   70        | ExprAux . DIV ExprAux
   71        | ExprAux . MOD ExprAux

    PLUS   shift, and go to state 117
    MINUS  shift, and go to state 118
    STAR   shift, and go to state 119
    DIV    shift, and go to state 120
    MOD    shift, and go to state 121

    $default  reduce using rule 63 (ExprAux)


state 147

   59 ExprAux: ExprAux . AND ExprAux
   60        | ExprAux . OR ExprAux
   61        | ExprAux . EQ ExprAux
   61        | ExprAux EQ ExprAux .
   62        | ExprAux . GEQ ExprAux
   63        | ExprAux . GT ExprAux
   64        | ExprAux . LEQ ExprAux
   65        | ExprAux . LT ExprAux
   66        | ExprAux . NEQ ExprAux
   67        | ExprAux . PLUS ExprAux
   68        | ExprAux . MINUS ExprAux
   69        | ExprAux . STAR ExprAux
   70        | ExprAux . DIV ExprAux
   71        | ExprAux . MOD ExprAux

    LT     shift, and go to state 111
    GT     shift, and go to state 112
    LEQ    shift, and go to state 115
    GEQ    shift, and go to state 116
    PLUS   shift, and go to state 117
    MINUS  shift, and go to state 118
    STAR   shift, and go to state 119
    DIV    shift, and go to state 120
    MOD    shift, and go to state 121

    $default  reduce using rule 61 (ExprAux)


state 148

   59 ExprAux: ExprAux . AND ExprAux
   60        | ExprAux . OR ExprAux
   61        | ExprAux . EQ ExprAux
   62        | ExprAux . GEQ ExprAux
   63        | ExprAux . GT ExprAux
   64        | ExprAux . LEQ ExprAux
   65        | ExprAux . LT ExprAux
   66        | ExprAux . NEQ ExprAux
   66        | ExprAux NEQ ExprAux .
   67        | ExprAux . PLUS ExprAux
   68        | ExprAux . MINUS ExprAux
   69        | ExprAux . STAR ExprAux
   70        | ExprAux . DIV ExprAux
   71        | ExprAux . MOD ExprAux

    LT     shift, and go to state 111
    GT     shift, and go to state 112
    LEQ    shift, and go to state 115
    GEQ    shift, and go to state 116
    PLUS   shift, and go to state 117
    MINUS  shift, and go to state 118
    STAR   shift, and go to state 119
    DIV    shift, and go to state 120
    MOD    shift, and go to state 121

    $default  reduce using rule 66 (ExprAux)


state 149

   59 ExprAux: ExprAux . AND ExprAux
   60        | ExprAux . OR ExprAux
   61        | ExprAux . EQ ExprAux
   62        | ExprAux . GEQ ExprAux
   63        | ExprAux . GT ExprAux
   64        | ExprAux . LEQ ExprAux
   64        | ExprAux LEQ ExprAux .
   65        | ExprAux . LT ExprAux
   66        | ExprAux . NEQ ExprAux
   67        | ExprAux . PLUS ExprAux
   68        | ExprAux . MINUS ExprAux
   69        | ExprAux . STAR ExprAux
   70        | ExprAux . DIV ExprAux
   71        | ExprAux . MOD ExprAux

    PLUS   shift, and go to state 117
    MINUS  shift, and go to state 118
    STAR   shift, and go to state 119
    DIV    shift, and go to state 120
    MOD    shift, and go to state 121

    $default  reduce using rule 64 (ExprAux)


state 150

   59 ExprAux: ExprAux . AND ExprAux
   60        | ExprAux . OR ExprAux
   61        | ExprAux . EQ ExprAux
   62        | ExprAux . GEQ ExprAux
   62        | ExprAux GEQ ExprAux .
   63        | ExprAux . GT ExprAux
   64        | ExprAux . LEQ ExprAux
   65        | ExprAux . LT ExprAux
   66        | ExprAux . NEQ ExprAux
   67        | ExprAux . PLUS ExprAux
   68        | ExprAux . MINUS ExprAux
   69        | ExprAux . STAR ExprAux
   70        | ExprAux . DIV ExprAux
   71        | ExprAux . MOD ExprAux

    PLUS   shift, and go to state 117
    MINUS  shift, and go to state 118
    STAR   shift, and go to state 119
    DIV    shift, and go to state 120
    MOD    shift, and go to state 121

    $default  reduce using rule 62 (ExprAux)


state 151

   59 ExprAux: ExprAux . AND ExprAux
   60        | ExprAux . OR ExprAux
   61        | ExprAux . EQ ExprAux
   62        | ExprAux . GEQ ExprAux
   63        | ExprAux . GT ExprAux
   64        | ExprAux . LEQ ExprAux
   65        | ExprAux . LT ExprAux
   66        | ExprAux . NEQ ExprAux
   67        | ExprAux . PLUS ExprAux
   67        | ExprAux PLUS ExprAux .
   68        | ExprAux . MINUS ExprAux
   69        | ExprAux . STAR ExprAux
   70        | ExprAux . DIV ExprAux
   71        | ExprAux . MOD ExprAux

    STAR  shift, and go to state 119
    DIV   shift, and go to state 120
    MOD   shift, and go to state 121

    $default  reduce using rule 67 (ExprAux)


state 152

   59 ExprAux: ExprAux . AND ExprAux
   60        | ExprAux . OR ExprAux
   61        | ExprAux . EQ ExprAux
   62        | ExprAux . GEQ ExprAux
   63        | ExprAux . GT ExprAux
   64        | ExprAux . LEQ ExprAux
   65        | ExprAux . LT ExprAux
   66        | ExprAux . NEQ ExprAux
   67        | ExprAux . PLUS ExprAux
   68        | ExprAux . MINUS ExprAux
   68        | ExprAux MINUS ExprAux .
   69        | ExprAux . STAR ExprAux
   70        | ExprAux . DIV ExprAux
   71        | ExprAux . MOD ExprAux

    STAR  shift, and go to state 119
    DIV   shift, and go to state 120
    MOD   shift, and go to state 121

    $default  reduce using rule 68 (ExprAux)


state 153

   59 ExprAux: ExprAux . AND ExprAux
   60        | ExprAux . OR ExprAux
   61        | ExprAux . EQ ExprAux
   62        | ExprAux . GEQ ExprAux
   63        | ExprAux . GT ExprAux
   64        | ExprAux . LEQ ExprAux
   65        | ExprAux . LT ExprAux
   66        | ExprAux . NEQ ExprAux
   67        | ExprAux . PLUS ExprAux
   68        | ExprAux . MINUS ExprAux
   69        | ExprAux . STAR ExprAux
   69        | ExprAux STAR ExprAux .
   70        | ExprAux . DIV ExprAux
   71        | ExprAux . MOD ExprAux

    $default  reduce using rule 69 (ExprAux)


state 154

   59 ExprAux: ExprAux . AND ExprAux
   60        | ExprAux . OR ExprAux
   61        | ExprAux . EQ ExprAux
   62        | ExprAux . GEQ ExprAux
   63        | ExprAux . GT ExprAux
   64        | ExprAux . LEQ ExprAux
   65        | ExprAux . LT ExprAux
   66        | ExprAux . NEQ ExprAux
   67        | ExprAux . PLUS ExprAux
   68        | ExprAux . MINUS ExprAux
   69        | ExprAux . STAR ExprAux
   70        | ExprAux . DIV ExprAux
   70        | ExprAux DIV ExprAux .
   71        | ExprAux . MOD ExprAux

    $default  reduce using rule 70 (ExprAux)


state 155

   59 ExprAux: ExprAux . AND ExprAux
   60        | ExprAux . OR ExprAux
   61        | ExprAux . EQ ExprAux
   62        | ExprAux . GEQ ExprAux
   63        | ExprAux . GT ExprAux
   64        | ExprAux . LEQ ExprAux
   65        | ExprAux . LT ExprAux
   66        | ExprAux . NEQ ExprAux
   67        | ExprAux . PLUS ExprAux
   68        | ExprAux . MINUS ExprAux
   69        | ExprAux . STAR ExprAux
   70        | ExprAux . DIV ExprAux
   71        | ExprAux . MOD ExprAux
   71        | ExprAux MOD ExprAux .

    $default  reduce using rule 71 (ExprAux)


state 156

   35 Statement: WHILE OCURV Expr CCURV . Statement

    error     shift, and go to state 35
    DO        shift, and go to state 36
    IF        shift, and go to state 37
    PARSEINT  shift, and go to state 38
    PRINT     shift, and go to state 39
    RETURN    shift, and go to state 40
    WHILE     shift, and go to state 41
    OBRACE    shift, and go to state 42
    SEMI      shift, and go to state 44
    ID        shift, and go to state 3

    Statement         go to state 166
    Assignment        go to state 47
    MethodInvocation  go to state 48
    ParseArgs         go to state 49
    IDAux             go to state 51


state 157

   29 VarDeclL: VarDeclL COMMA VarsIds .

    $default  reduce using rule 29 (VarDeclL)


state 158

   51 MethodInvocation: IDAux OCURV error CCURV .

    $default  reduce using rule 51 (MethodInvocation)


state 159

   49 MethodInvocation: IDAux OCURV Expr CommaExpr . CCURV
   52 CommaExpr: CommaExpr . COMMA Expr

    CCURV  shift, and go to state 167
    COMMA  shift, and go to state 168


state 160

   21 FormalParamsStringArray: StringArray OSQUARE CSQUARE IDAux .

    $default  reduce using rule 21 (FormalParamsStringArray)


state 161

   36 Statement: DO Statement WHILE OCURV Expr . CCURV SEMI

    CCURV  shift, and go to state 169


state 162

   33 Statement: IF OCURV Expr CCURV Statement . ELSE Statement
   34          | IF OCURV Expr CCURV Statement .

    ELSE  shift, and go to state 170

    $default  reduce using rule 34 (Statement)


state 163

   55 ParseArgs: PARSEINT OCURV IDAux OSQUARE Expr . CSQUARE CCURV

    CSQUARE  shift, and go to state 171


state 164

   38 Statement: PRINT OCURV StrLitAux CCURV SEMI .

    $default  reduce using rule 38 (Statement)


state 165

   37 Statement: PRINT OCURV Expr CCURV SEMI .

    $default  reduce using rule 37 (Statement)


state 166

   35 Statement: WHILE OCURV Expr CCURV Statement .

    $default  reduce using rule 35 (Statement)


state 167

   49 MethodInvocation: IDAux OCURV Expr CommaExpr CCURV .

    $default  reduce using rule 49 (MethodInvocation)


state 168

   52 CommaExpr: CommaExpr COMMA . Expr

    BOOLLIT   shift, and go to state 67
    PARSEINT  shift, and go to state 38
    OCURV     shift, and go to state 68
    PLUS      shift, and go to state 69
    MINUS     shift, and go to state 70
    NOT       shift, and go to state 71
    DECLIT    shift, and go to state 73
    REALLIT   shift, and go to state 74
    ID        shift, and go to state 3

    Assignment        go to state 75
    MethodInvocation  go to state 76
    ParseArgs         go to state 77
    ExprAux           go to state 78
    Expr              go to state 172
    IDAux             go to state 80


state 169

   36 Statement: DO Statement WHILE OCURV Expr CCURV . SEMI

    SEMI  shift, and go to state 173


state 170

   33 Statement: IF OCURV Expr CCURV Statement ELSE . Statement

    error     shift, and go to state 35
    DO        shift, and go to state 36
    IF        shift, and go to state 37
    PARSEINT  shift, and go to state 38
    PRINT     shift, and go to state 39
    RETURN    shift, and go to state 40
    WHILE     shift, and go to state 41
    OBRACE    shift, and go to state 42
    SEMI      shift, and go to state 44
    ID        shift, and go to state 3

    Statement         go to state 174
    Assignment        go to state 47
    MethodInvocation  go to state 48
    ParseArgs         go to state 49
    IDAux             go to state 51


state 171

   55 ParseArgs: PARSEINT OCURV IDAux OSQUARE Expr CSQUARE . CCURV

    CCURV  shift, and go to state 175


state 172

   52 CommaExpr: CommaExpr COMMA Expr .

    $default  reduce using rule 52 (CommaExpr)


state 173

   36 Statement: DO Statement WHILE OCURV Expr CCURV SEMI .

    $default  reduce using rule 36 (Statement)


state 174

   33 Statement: IF OCURV Expr CCURV Statement ELSE Statement .

    $default  reduce using rule 33 (Statement)


state 175

   55 ParseArgs: PARSEINT OCURV IDAux OSQUARE Expr CSQUARE CCURV .

    $default  reduce using rule 55 (ParseArgs)
